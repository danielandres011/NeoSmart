<AuthorizeView>
    <Authorized>

        
        @* @if (!string.IsNullOrEmpty(photoUser))
        {
            <div class="mx-2">
                <img src="@photoUser" width="50" height="50" style="border-radius:50%" />
            </div>
        } *@
        

        <div class="dropdown">
            <label class="h6 text-center">Hola, @context.User.Identity!.Name </label>
            <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                @if (!string.IsNullOrEmpty(photoUser))
                {
                    <img src="@photoUser" width="40" height="40" style="border-radius:50%" />
                }
                else
                {
                    <img src="./img/ic_user.png" width="40" height="40" style="border-radius:50%" />
                }
            </button>
            <ul class="dropdown-menu p-3" aria-labelledby="dropdownMenuButton1" style="margin:0 auto">        
                <a href="EditUser" class="btn btn-primary">Mi Cuenta</a>
                <a href="Logout" class="btn btn-danger">Cerrar Sesión</a>
            </ul>
        </div>
    </Authorized>
    <NotAuthorized>
        <a @onclick=@(() => ShowModal(true)) class="nav-link btn btn-link">Registro</a>
        <a @onclick=@(() => ShowModal()) class="nav-link btn btn-link">Iniciar Sesión</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string? photoUser;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = null!;

    [CascadingParameter]
    IModalService Modal { get; set; } = default!;

    protected async override Task OnParametersSetAsync()
    {
        var authenticationState = await authenticationStateTask;
        var claims = authenticationState.User.Claims.ToList();
        var photoClaim = claims.FirstOrDefault(x => x.Type == "Photo");
        if (photoClaim is not null)
        {
            photoUser = photoClaim.Value;
        }
    }

    private void ShowModal(bool value = false)
    {
        if (value)
        {
            var modalReference = Modal.Show<Register>();
        }
        else
        {
            var modalReference = Modal.Show<Login>();
        }
    }
}

